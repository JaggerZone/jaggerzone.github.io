[{"title":"docker学习","url":"/7fb3659b.html","content":"\n# docker\n\n## 简介\n\n### 定义\t\n\n​\tdocker是一种支持windows/linux/mac系统的容器，可以把它理解为一个轻量级的虚拟机，也可以理解为手机中的小程序，用完即丢。它是一个应用打包、分发、部署的工具。具体的介绍可以查看[Docker快速入门](https://docker.easydoc.net/doc/81170005/cCewZWoN/lTKfePfP)。\n\n### 特性\n\n​\t一、docker支持各类windows和Linux系统\n\n​\t二、性能好，仅安装软件所需要的环境，最大化的减少无用配置\n\n​\t三、一条命令即可部署所需环境\n\n​\t四、稳定性强\n\n## docker常用命令\n\n```shell\n#查看正在运行的容器\ndocker ps\n#查看镜像列表\ndocker images\n#删除指定id的容器\ndocker rm container-id\n#启动/停止指定id的容器\ndocker start/stop container-id\n#删除指定id的镜像\ndocker rmi image-id\n#查看volume列表\ndocker volume ls\n#查看网络列表\ndocker network ls\n```\n\n```shell\n#build为镜像,'-t'设置镜像名字和版本号\ndocker build -t test:v1\n#生成\n#'-it'以交互的方式运行\n#'-p'映射容器内端口到宿主机\n#'-v'绑定指定的文件夹\n#'--name'容器名字\n#'--hostname'主机名\n#'-d'后台运行\ndocker run -it -p 8080:8080 -v ~/hexo:/hexo --name test-hello --hostname test:v1 \n#交互式运行\ndocker exec -it hexo /bin/bash\n```\n\n## 继续更新中~\n\n"},{"title":"为HEXO添加背景音乐","url":"/ff392be1.html","content":"\n看完这篇文章就知道怎么加背景音乐啦~\n\n\n\n## 安装hexo-tag-aplayer\n\n### 安装插件\n\n``` bash\n$ npm install --save hexo-tag-aplayer\n```\n\n## 修改配置文件\n\n### 修改_config.yml\n\n``` yaml\naplayer:\n  enable: true\n  asset_inject: false\n```\n\n### 修改Butterfly主题配置文件\n\n``` yaml\naplayerInject:\n  enable: true # 开启音乐播放器\n  per_page: true #每个页面都有Aplayer\n```\n\n``` yaml\ninject:\n  head:\n    # - <link rel=\"stylesheet\" href=\"/xxx.css\">\n  bottom:\n    - '<div class=\"aplayer no-destroy\" data-id=\"1900191778\" data-server=\"netease\" data-type=\"song\" data-fixed=\"true\" data-autoplay=\"true\" data-mutex=\"false\" > </div>'\n```\n"},{"title":"安装Hexo","url":"/aec52b30.html","content":"\n# 安装基础环境\n\n### 使用docker拉取基础镜像\n\n```shell\n#拉取ubuntu24.04的镜像\ndocker pull ubuntu:24.04\n#用docker生成hexo\ndocker run -it --name hexo --hostname hexo -v ~/hexo:/hexo -p 4000:4000 ubuntu:24.04 /bin/bash\n#交互式运行hexo\ndocker exec -it hexo /bin/bash\n```\n\n### 安装基础环境\n\n```shell\n#备份sources.list文件\ncp /etc/apt/sources.list /etc/apt/sources.list.bak\n#跳过交互式设置时区\nexport DEBIAN_FRONTEND=noninteractive\napt update && apt -y install ca-certificates vim tzdata\nln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\ndpkg-reconfigure -f noninteractive tzdata\n\n#更换镜像源\ncat > /etc/apt/sources.list << EOF \ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble main restricted universe multiverse\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-updates main restricted universe multiverse\n\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ noble-backports main restricted universe multiverse\n\n# 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换\ndeb http://security.ubuntu.com/ubuntu/ noble-security main restricted universe multiverse\n\nEOF\n\n#安装git、npm\napt update && apt -y install git npm\n```\n\n### 安装hexo\n\n```shell\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo server\n```\n\n```shell\nroot@hexo:/hexo/blog# git -v\ngit version 2.43.0\nroot@hexo:/hexo/blog# npm -v\n9.2.0\nroot@hexo:/hexo/blog# hexo -v\nINFO  Validating config\nhexo: 7.2.0\nhexo-cli: 4.3.2\nos: linux 6.6.26-linuxkit Ubuntu 24.04 LTS 24.04 LTS (Noble Numbat)\nnode: 18.19.1\nacorn: 8.8.1\nada: 2.7.2\nares: 1.27.0\nbase64: 0.5.0\nbrotli: 1.1.0\ncjs_module_lexer: 1.2.3\ncldr: 44.1\nicu: 74.2\nllhttp: 6.1.0\nmodules: 109\nnapi: 9\nnghttp2: 1.59.0\nopenssl: 3.0.13\nsimdutf: 3.2.18\ntz: 2023c\nunicode: 15.1\nuv: 1.48.0\nuvwasi: 0.0.19\nv8: 10.2.154.26-node.28\nzlib: 1.3\n```\n\n### 打开/关闭hexo\n\n```shell\n#打开hexo\ndocker start hexo\ndocker exec -it hexo /bin/bash\n```\n\n```shell\n#关闭hexo\nroot@hexo:/hexo/blog# exit\ndocker stop hexo\n```\n\n"},{"title":"Hexo连接Git","url":"/2f35f85b.html","content":"\n## 创建GitHub账号\n\n这个就不用多说了，直接进入正题\n\n## 本地连接GitHub\n\n### 配置用户名和邮箱\n\n在创建hexo项目的文件夹内`shift+右键`打开`LinuxShell`\n\n```shell\ngit config --global user.name \"你的GitHub用户名\"\ngit config --global user.email \"你的GitHub邮箱\"\n```\n\n### 创建SSH密钥\n\n```shell\nssh-keygen -t rsa -C \"你的GitHub邮箱\"\n#然后一直回车\n```\n\n在`C:\\User\\[用户名]\\.ssh`目录下，用记事本打开`id_rsa.pub`并复制\n\n### 在GitHub中添加SSH密钥\n\n在GitHub中进入`Settings`\n\n选择左边的`SSH and GPG keys`，点击`New SSH key`\n\n取好名称将复制的内容粘贴进`Key`中，点击`Add SSH key`\n\n### 验证本地连接\n\n在本地的Linuxshell中输入\n\n```shell\nssh -T git@github.com\n#后面步骤输入'yes'回车\n```\n\n## 上传hexo程序到GitHub\n\n先在Hexo中安装hexo-deployer-git:\n\n```shell\nnpm install hexo-deployer-git --save\n```\n\n然后修改hexo文件夹内的_config.yml文件\n\n```yaml\ndeploy:\n  type: git\n  repo: git@github.com:[github用户名]/[github用户名].github.io.git\n  branch: gh-pages\n```\n\n```shell\nhexo clean\nhexo g d\n```\n\n然后我们需要在库设置（Repository Settings）中将默认分支设置为`_config.yml` 配置中的分支名称。\n\n然后在 pages 页面调整源分支\n\n使用`[github用户名].github.io`就能看到自己的网页啦~\n"}]